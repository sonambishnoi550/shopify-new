<style>
    .added-to-wishlist svg {
      storke : var(--color-orange) !important;
  path {
      fill: white !important;
      storke : var(--color-orange) !important;
  }
  }
</style>
{% stylesheet %}
  .event-packages {
    background: #fff;
    text-align: center;
  }
  .event-packages .section-heading {
    margin-bottom: 10px;
    font-size: 32px;
    font-weight: 700;
    color: #111;
  }
  .event-packages .section-subheading {
    margin-bottom: 40px;
    font-size: 16px;
    color: #555;
  }
  .package-grid {
    max-width: 1140px;
    margin: 0 auto;
    display: flex;
    gap: 20px;
    justify-content: center;
  }
  .package-card {
    background: #F6F6F6;
    border-radius: 16px;
    padding: 24px 14px 24px 24px;
    width: 100%;
    max-width: 364px;
    text-align: left;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.06);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: all 0.3s ease;
  }
  .package-card:hover {
      background: #F4F6FA;
    /* transform: translateY(-4px); */
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }
  .package-card h3 {
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 8px;
    color: #111;
  }
  .package-card p.description {
    font-size: 14px;
    color: #555;
    margin-bottom: 20px;
    min-height: 42px;
  }
  .package-price {
    font-size: 28px;
    color: var(--color-orange);
    font-weight: 700;
    margin-bottom: 5px;
  }
  .package-price span {
    font-size: 14px;
    font-weight: 400;
    color: #666;
    margin-left: 6px;
  }
  .btn-book {
    background: var(--color-orange);
    color: #fff;
    padding: 12px;
    text-align: center;
    font-weight: 600;
    font-size: 15px;
    border-radius: 8px;
    margin: 20px 0;
    text-decoration: none;
    display: block;
    transition: all 0.3s ease;
  }
  .btn-book:hover {
    background: var(--color-orange);
  }
  .package-features {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .package-features li {
    display: flex;
    align-items: flex-start;
    font-size: 14px;
    color: #444;
    margin-bottom: 14px;
  }
  @media (max-width: 768px) {
    .package-card {
      max-width: 100%;
    }
  }
{% endstylesheet %}
<!--
  <div class="event-packages">
    <div class="package-grid lg:!flex !hidden xl:!gap-[20px] !gap-[10px]">
      {% for block in section.blocks %}
        <div class="package-card max-sm:!h-[580px] group">
          <div>
            <h3 class="bricolage-grotesque-ff !pb-[16px] !mb-0">{{ block.settings.title }}</h3>
            <p class="description roboto-font md:!text-[16px] !text-[14px]">{{ block.settings.description }}</p>
           <div class="package-price bricolage-grotesque-ff flex items-baseline !text-[30px]">
  <span class="!text-[16px] !font-[700] pr-[2px] text-[#010101B2]"> ab </span>{{ block.settings.price }}{{ block.settings.currency }}<span class="!text-[16px] !font-[700] pr-[2px] text-[#010101B2]">/person </span>
  </div>
            {% if block.settings.button_label and block.settings.button_link %}
              <a href="{{ block.settings.button_link }}" class="btn-book max-w-[316px] transition-all roboto-font !text-[16px] duration-300 hover:!bg-white hover:!border-orange !border border-transparent hover:!text-orange">
                {{ block.settings.button_label }}
              </a>
            {% endif %}
            <ul class="package-features">
              {% for i in (1..6) %}
                {% assign feature_key = "feature_" | append: i %}
                {% assign feature = block.settings[feature_key] %}
                {% if feature != blank %}
                  <li class="!text-[14px] !text-[#010101B2] group-hover:!text-black roboto-font md:!text-[16px]"><span class="min-w-[24px] h-[24px] mr-[10px] rounded-full bg-[#E7EAF2] flex justify-center items-center">{{ 'package-check-mark.svg' | inline_asset_content }}</span>{{ feature }}</li>
                {% endif %}
              {% endfor %}
            </ul>
          </div>
        </div>
      {% endfor %}
    </div>
-->
<div class="event-package !max-w-[1140px] overflow-hidden !px-[20px] !py-[80px] max-lg:py-[0px] !mx-auto block">
  <h2 class="section-heading bricolage-grotesque-ff text-center !normal-case !text-[24px]">
    {{ section.settings.heading }}
  </h2>
  <p class="section-subheading !text-[16px] text-center text-[#4C4C4C] pb-[40px]">{{ section.settings.subheading }}</p>
  <div class="swiper-wrapper !h-auto">
    {% assign selected_collection = collections[section.settings.package_collection] %}
    {% if selected_collection.products_count > 0 %}
      {% for product in selected_collection.products %}
        <div class="swiper-slide">
          <div class="relative">
            {% assign first_collection = product.collections | first %}
            {% if first_collection %}
              <p class="text-[12px] text-white font-normal !bg-orange py-[6px] px-[18px] uppercase rounded-full roboto-font absolute top-[2%] left-[2%]">
                {{ first_collection.title }}
              </p>
            {% endif %}
            <button
              aria-label="Add To Wishlist"
              class="absolute z-[1] size-[30px] top-[10px] right-[10px] !border !border-solid !border-orange !bg-white !rounded-full m-wishlist-button flex justify-center items-center m-wishlist-button"
              data-product-handle="{{ product.handle }}"
            >
              <svg width="20" height="20" viewBox="0 0 79 79" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                  d="M39.5007 70.2771L34.7277 65.9321C17.7757 50.56 6.58398 40.3888 6.58398 27.9792C6.58398 17.8079 14.5498 9.875 24.6882 9.875C30.4157 9.875 35.9127 12.5412 39.5007 16.7217C43.0886 12.5412 48.5857 9.875 54.3132 9.875C64.4515 9.875 72.4173 17.8079 72.4173 27.9792C72.4173 40.3888 61.2257 50.56 44.2736 65.9321L39.5007 70.2771Z"
                  fill="white"
                  stroke="#FF6B2D"
                  stroke-width="2"
                />
              </svg>
            </button>
            <div class="package-card group">
              <div class="!pt-[16px]">
                <h3 class="bricolage-grotesque-ff pt-[10px] !line-clamp-1 !mb-[16px]">{{ product.title }}</h3>
                <p class="description roboto-font md:!text-[16px] !line-clamp-3 !text-[14px]">
                  {{ product.description | strip_html | truncatewords: 25 }}
                </p>
                <div class="package-price bricolage-grotesque-ff flex items-baseline !text-[30px]">
                  {% comment %} <span class="!text-[16px] !font-[700] pr-[2px] text-[#010101B2]">Ab </span> {% endcomment %}
                  {{ product.price | money }}/Person
                </div>
                <div class="flex gap-[8px] pb-[0px] items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="12" height="12" viewBox="0 0 50 50">
                    <path d="M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 37.039062 10.990234 A 1.0001 1.0001 0 0 0 36.265625 11.322266 L 26.183594 22.244141 A 3 3 0 0 0 25 22 A 3 3 0 0 0 22 25 A 3 3 0 0 0 25 28 A 3 3 0 0 0 25.5 27.958984 L 29.125 34.486328 A 1.0010694 1.0010694 0 1 0 30.875 33.513672 L 27.246094 26.984375 A 3 3 0 0 0 28 25 A 3 3 0 0 0 27.652344 23.599609 L 37.734375 12.677734 A 1.0001 1.0001 0 0 0 37.039062 10.990234 z"></path>
                  </svg>
                  <p class="bricolage-grotesque-ff text-[14px]">
                    Dauer: <span>{{ product.metafields.custom.min_hour | default: 4 }} Hours</span>
                  </p>
                </div>
                <div class="flex gap-[8px] pb-[8px] items-center">
                  <svg
                    class="max-[480px]:!w-[14px] max-[480px]:!h-[12px]"
                    width="12"
                    height="12"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path d="M12.4499 10.9478C11.9472 10.6732 11.3706 10.5173 10.7577 10.5173H9.30107C8.671 10.5173 8.07959 10.6822 7.56748 10.9708C6.49053 11.5771 5.76318 12.7314 5.76318 14.0552V15.1466H14.2956V14.0552C14.2956 12.7142 13.5495 11.5478 12.4499 10.9478Z" fill="#010101" fill-opacity="0.7"/>
                    <path d="M16.4725 9.54785H15.2615C14.5545 9.54785 13.8955 9.75684 13.3428 10.117C13.6084 10.2912 13.858 10.4947 14.0881 10.7248C14.9775 11.6143 15.4674 12.7971 15.4674 14.0553V14.5686H19.9998V13.0752C19.9998 11.1303 18.4174 9.54785 16.4725 9.54785Z" fill="#010101" fill-opacity="0.7"/>
                    <path d="M4.73828 9.54785H3.52734C1.58242 9.54785 0 11.1303 0 13.0752V14.5686H4.59141V14.0553C4.59141 12.7971 5.08164 11.6143 5.97109 10.7248C6.19258 10.5033 6.43203 10.3064 6.68672 10.1365C6.12812 9.76465 5.4582 9.54785 4.73828 9.54785Z" fill="#010101" fill-opacity="0.7"/>
                    <path d="M15.8654 4.24292C15.8592 4.24292 15.8527 4.24296 15.8465 4.24304C14.5356 4.25386 13.4784 5.38687 13.4898 6.76862C13.5012 8.14382 14.5666 9.25503 15.869 9.25503C15.8752 9.25503 15.8816 9.25499 15.8879 9.25491C16.5307 9.2496 17.1305 8.97882 17.5769 8.49237C18.0129 8.01722 18.25 7.39112 18.2446 6.72933C18.2332 5.35413 17.1678 4.24292 15.8654 4.24292Z" fill="#010101" fill-opacity="0.7"/>
                    <path d="M4.13101 4.24292C4.1248 4.24292 4.11835 4.24296 4.1121 4.24304C2.80124 4.25386 1.74406 5.38687 1.75546 6.76862C1.76679 8.14382 2.83222 9.25503 4.1346 9.25503C4.14085 9.25503 4.14726 9.25499 4.15351 9.25491C4.79624 9.2496 5.39609 8.97882 5.84249 8.49237C6.27855 8.01722 6.51566 7.39112 6.51019 6.72933C6.49882 5.35413 5.43343 4.24292 4.13101 4.24292Z" fill="#010101" fill-opacity="0.7"/>
                    <path d="M10.0297 3.85327C8.51836 3.85327 7.28906 5.1521 7.28906 6.74897C7.28906 7.90288 7.93125 8.90132 8.8582 9.36616C9.21367 9.54468 9.61094 9.64429 10.0297 9.64429C10.4484 9.64429 10.8457 9.54468 11.2012 9.36616C12.1281 8.90132 12.7703 7.90288 12.7703 6.74897C12.7703 5.1521 11.541 3.85327 10.0297 3.85327Z" fill="#010101" fill-opacity="0.7"/>
                  </svg>
                  <p class="bricolage-grotesque-ff text-[14px]">
                    Personen : <span> Min {{ product.metafields.custom.min_people | default: 25 }}</span>
                    {% comment %} <span> Max {{ product.metafields.custom.max_people | default: 100 }}</span> {% endcomment %}
                  </p>
                </div>
                <a
                  href="{{ product.metafields.custom.button | default: product.url }}"
                  class="btn-book max-w-[316px] !text-[14px] transition-all roboto-font !text-[16px] duration-300 !border-[#9787FE] !border !text-[#9787FE]"
                >
                  Anfragen
                </a>
                {% assign features = product.metafields.custom.package_list %}
                <ul class="package-features">
                  {% if features != blank %}
                    {% for feature in features.value %}
                      <li class="!text-[14px] !text-[#010101B2] group-hover:!text-black flex !items-center !gap-[10px] roboto-font md:!text-[16px] !mb-[12px]">
                        <span class="min-w-[24px] min-h-[24px] max-sm:min-w-[20px] rounded-full bg-[#E7EAF2] flex justify-center items-center">
                          {{ 'package-check-mark.svg' | inline_asset_content }}
                        </span>
                        <span class="!line-clamp-2">{{ feature }}</span>
                      </li>
                    {% endfor %}
                  {% endif %}
                </ul>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p class="text-center w-full">No products available in this collection.</p>
    {% endif %}
  </div>
  <div class="w-full flex justify-center md:!hidden !flex mt-[34px] gap-[8px]">
    <!-- Previous Button -->
    <div class="event-package-button-prev w-[40px] h-[40px] flex group justify-center cursor-pointer items-center hover:bg-orange bg-white rounded-full !border !border-orange transition-all duration-300">
      <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path class="group-hover:stroke-white transition-all duration-300" d="M4.66602 10L16.3327 10M4.66602 10L9.66602 5M4.66602 10L9.66602 15" stroke="#FF6B2D" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </div>
    <!-- Next Button -->
    <div class="event-package-button-next w-[40px] h-[40px] flex group justify-center cursor-pointer items-center hover:bg-orange bg-white rounded-full !border !border-orange transition-all duration-300">
      <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path class="group-hover:stroke-white transition-all duration-300" d="M16.334 10L4.66732 10M16.334 10L11.334 5M16.334 10L11.334 15" stroke="#FF6B2D" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </div>
  </div>
  <div class="hidden md:!block">
    {% if selected_collection.products_count > 3 %}
      <div class="w-full flex justify-center mt-[34px] gap-[8px]">
        <!-- Previous Button -->
        <div class="event-package-button-prev w-[40px] h-[40px] flex group justify-center cursor-pointer items-center hover:bg-orange bg-white rounded-full border border-orange transition-all duration-300">
          <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path class="group-hover:stroke-white transition-all duration-300" d="M4.66602 10L16.3327 10M4.66602 10L9.66602 5M4.66602 10L9.66602 15" stroke="#FF6B2D" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <!-- Next Button -->
        <div class="event-package-button-next w-[40px] h-[40px] flex group justify-center cursor-pointer items-center hover:bg-orange bg-white rounded-full border border-orange transition-all duration-300">
          <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path class="group-hover:stroke-white transition-all duration-300" d="M16.334 10L4.66732 10M16.334 10L11.334 5M16.334 10L11.334 15" stroke="#FF6B2D" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      </div>
    {% endif %}
  </div>
</div>
<script>
  btn.classList.add(this.addedClass); // => "added-to-wishlist"
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    setTimeout(function () {
      const swiperContainer = document.querySelector('.event-package');
      const nextBtn = document.querySelector('.event-package-button-next');
      const prevBtn = document.querySelector('.event-package-button-prev');
      if (swiperContainer && nextBtn && prevBtn) {
        new Swiper('.event-package', {
          slidesPerView: 1,
          spaceBetween: 24,
          loop: true,
          navigation: {
            nextEl: '.event-package-button-next',
            prevEl: '.event-package-button-prev',
          },
          breakpoints: {
            480: { slidesPerView: 1.3 },
            690: { slidesPerView: 1.7 },
            760: { slidesPerView: 2 },
            860: { slidesPerView: 2.3 },
            960: { slidesPerView: 2.5 },
            992: { slidesPerView: 3 },
          },
        });
      } else {
        console.warn('Swiper or buttons not found for .event-package');
      }
    }, 300); // Wait for mobile/iPhone DOM load
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    function setEqualCardHeight() {
      const cards = document.querySelectorAll('.package-card');
      let maxHeight = 0;
      // Reset previous heights
      cards.forEach(card => {
        card.style.height = 'auto';
      });
      // Find max height
      cards.forEach(card => {
        const height = card.offsetHeight;
        if (height > maxHeight) {
          maxHeight = height;
        }
      });
      // Apply max height to all cards
      cards.forEach(card => {
        card.style.height = maxHeight + 'px';
      });
    }
    // Run once after page load and Swiper init
    setTimeout(() => {
      setEqualCardHeight();
    }, 500); // delay to wait for images/swiper
    // Run again on window resize (optional)
    window.addEventListener('resize', () => {
      setEqualCardHeight();
    });
  });
</script>
{% schema %}
{
  "name": "Event Packages",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Main Heading",
      "default": "Event Packages"
    },
    {
      "type": "text",
      "label": "Collection Type",
      "id": "collection_type"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Our top sellers"
    },
    {
      "type": "collection",
      "id": "package_collection",
      "label": "Select Collection"
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Event Packages",
      "category": "Custom"
    }
  ]
}
{% endschema %}